<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- 引入jdbc配置文件 -->
	<bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
                <value>WEB-INF/classes/conf/mybatis.properties</value>  
            </list>  
        </property>  
    </bean>

	<!--创建jdbc数据源 -->
	<bean id="dataSourceRW" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
	</bean>
	<!--只读数据库 -->
	<bean id="dataSourceR" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driverR}" />
		<property name="url" value="${urlR}" />
		<property name="username" value="${usernameR}" />
		<property name="password" value="${passwordR}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
	</bean>
	<!-- 动态数据源 -->
	<bean id="dynamicDataSource" class="com.app.datasource.DynamicDataSource">
		<!-- 通过key-value关联数据源 -->
		<property name="targetDataSources">
			<map>
				<entry value-ref="dataSourceRW" key="dataSourceRW"></entry>
				<entry value-ref="dataSourceR" key="dataSourceR"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceR" />
	</bean>

	<bean id="pagableInterceptor" class="com.app.mybatis.plugins.pagable.PagableInterceptor">
		<!-- 可选 MYSQL, ORACLE -->
		<property name="properties">
			<map>
				<entry key="dialect" value="${dialect}" />
			</map>
		</property>
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="plugins" ref="pagableInterceptor" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!--创建数据映射器，数据映射器必须为接口 <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.app.demo.dao.mapper.UserMapper" 
		/> <property name="sqlSessionFactory" ref="sessionFactory" /> </bean> -->


	<!-- 采用自动扫描方式创建mapper bean(批量更新模式) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.app.demo.dao.mapper" />
	</bean>


	<!-- <bean id="userDaoImpl" class="com.app.demo.dao.impl.UserDaoImpl"> <property 
		name="userMapper" ref="userMapper" /> </bean> -->

</beans>